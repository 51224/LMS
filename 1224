package welcome;     //Package Creation
public class Me
{
public void disp()
{
System.out.println("***************************Welcome to SRU Central library***************** ");
}
}

import welcome.Me; 
import java.util.Scanner;
 class book     // Class
{
     int sNo;
     String bookName; 
     String authorName;
     int bookQty;
     int bookQtyCopy;
     Scanner input = new Scanner(System.in);
     book()      //Constructor
    {
        System.out.println("Enter Serial No of Book:");
        this.sNo = input.nextInt();     //This Keyword
        input.nextLine();
        System.out.println("Enter Book Name:");
        this.bookName = input.nextLine();   
        System.out.println("Enter Author Name:");
        this.authorName = input.nextLine();    
        System.out.println("Enter Quantity of Books:");
        this.bookQty = input.nextInt();       
        bookQtyCopy = this.bookQty;
    }
}
 class books      //Class
 {
    book theBooks[] = new book[50];
    static int count;    //Static Variable
    Scanner input = new Scanner(System.in);
    public int compareBookObjects(book b1, book b2)    //String Function
    {
        if (b1.bookName.equalsIgnoreCase(b2.bookName)) 
{
            System.out.println("Book of this Name Already Exists.");
            return 0;
        }
        if (b1.sNo == b2.sNo) 
{
            System.out.println("Book of this Serial No Already Exists.");
            return 0;
        }
        return 1;
    }
    public void addBook(book b)      //Method and Access Modifiers
    {
        for (int i = 0; i < count; i++) 
{
            if (this.compareBookObjects(b, this.theBooks[i])== 0)
                return;
        }
        if (count < 50) 
{
            theBooks[count] = b;
            count++;
        }
        else 
{
            System.out.println("No Space to Add More Books.");
        }
    }
    public void searchBySno()    
    {
        System.out.println("\t\t\t\tSEARCH BY SERIAL NUMBER\n");
        int sNo;
        System.out.println("Enter Serial No of Book:");
        sNo = input.nextInt();
         int flag = 0;
        System.out.println("S.No\t\t Name\t\tAuthor\t\tAvailable Qty\t\tTotal Qty");
        try      //Try Block
{
        for (int i = 0; i < count; i++) 

            if (sNo == theBooks[i].sNo)
 {
                System.out.println(theBooks[i].sNo + "\t\t"+ theBooks[i].bookName + "\t\t" + theBooks[i].authorName + "\t\t" + theBooks[i].bookQtyCopy + "\t\t"+ theBooks[i].bookQty);
            }
else throw new InvalidserialException("Enter valid serial no:");  //Throw
        }
        catch(Exception e)   //Catch Block
{
            System.out.println(e);
    }
}
   public  void searchByAuthorName()   
    {
        System.out.println("\t\t\t\tSEARCH BY AUTHOR'S NAME");
        input.nextLine();
        System.out.println("Enter Author Name:");
        String authorName = input.nextLine();
        int flag = 0;
        System.out.println("S.No\t\tName\t\tAuthor\t\tAvailable Qty\t\tTotal Qty");
        for (int i = 0; i < count; i++) 
{
            if (authorName.equalsIgnoreCase(theBooks[i].authorName)) 
{
                System.out.println( theBooks[i].sNo + "\t\t" + theBooks[i].bookName + "\t\t" + theBooks[i].authorName + "\t\t" + theBooks[i].bookQtyCopy + "\t\t"+ theBooks[i].bookQty);
                flag++;
            }
        }
        if (flag == 0)
            System.out.println("No Books of " + authorName + " Found.");

    }
   public  void showAllBooks()  
    {
        System.out.println("\t\t\t\tSHOWING ALL BOOKS\n");
        System.out.println("S.No\t\tName\t\tAuthor\t\tAvailable Qty\t\tTotal Qty");
        for (int i = 0; i < count; i++) 
{
            System.out.println(theBooks[i].sNo + "\t\t"+ theBooks[i].bookName + "\t\t"+ theBooks[i].authorName + "\t\t"+ theBooks[i].bookQtyCopy + "\t\t"+ theBooks[i].bookQty);
        }
    }
  public   void upgradeBookQty()   
    {
        System.out.println("\t\t\t\tUPGRADE QUANTITY OF A BOOK\n");
        System.out.println("Enter Serial No of Book");
        int sNo = input.nextInt();
        for (int i = 0; i < count; i++) 
{ 
            if (sNo == theBooks[i].sNo) 
{
                System.out.println("Enter No of Books to be Added:");
                int addingQty = input.nextInt();
                theBooks[i].bookQty += addingQty;
                theBooks[i].bookQtyCopy += addingQty;
                return;
            }
        }
    }
   public  void dispMenu()   
    {
        System.out.println("/////////////////////////////////////////////////////////////////////////////////////////////////////");
        System.out.println("Press 1 to Add new Book.");
        System.out.println("Press 2 to increase Quantity");
        System.out.println("Press 3 to Search a Book.");
        System.out.println("Press 4 to Show All Books.");
        System.out.println("Press 5 to Register Student.");
        System.out.println("Press 6 to Show All Registered Students.");
        System.out.println("Press 0 to Exit Application.");
        System.out.println("/////////////////////////////////////////////////////////////////////////////////////////////////////");
    }
    public int isAvailable(int sNo)
    {
        for (int i = 0; i < count; i++) 
{
            if (sNo == theBooks[i].sNo)
 {
                if (theBooks[i].bookQtyCopy > 0)
 {
                    System.out.println("Book is Available.");
                    return i;
                }
                System.out.println("Book is Unavailable");
                return -1;
            }
        }
        System.out.println("No Book of Serial Number "+ " Available in Library.");
        return -1;
    }
}
class student   
{
    String studentName;
    String regNum;
    book borrowedBooks[] = new book[3];
    public int booksCount = 0;
    Scanner input = new Scanner(System.in);
    public student()  // Constructor
    {
        System.out.println("Enter Student Name:");
        this.studentName = input.nextLine();
        System.out.println("Enter Registration Number:");
        this.regNum = input.nextLine();
    }
}
class students //Class
{
    Scanner input = new Scanner(System.in);
    student theStudents[] = new student[50];
    public static int count = 0;    //Static Variable
    public void addStudent(student s)
    {
        for (int i = 0; i < count; i++) 
{
            if (s.regNum.equalsIgnoreCase(theStudents[i].regNum)) 
{
                System.out.println("Student of Reg Num " + s.regNum + " is Already Registered.");
                return;
            }
        }
        if (count <= 50) 
{
            theStudents[count] = s;
            count++;
        }
    }
   public  void showAllStudents()
    {
        System.out.println("Student Name\t\tReg Number");

        for (int i = 0; i < count; i++)
 {
            System.out.println(theStudents[i].studentName + "\t\t"+ theStudents[i].regNum);
        }
    }
  public int isStudent()
    {
        System.out.println("Enter Reg Number:");
        String regNum = input.nextLine();
        for (int i = 0; i < count; i++) 
{
            if (theStudents[i].regNum.equalsIgnoreCase(regNum)) 
{
                return i;
            }
        }
        System.out.println("Student is not Registered.");
        System.out.println("Get Registered First.");
        return -1;
    }
}

class Library 
{
static    //Static Block   
{
System.out.println("**************************GOODMORNING!!***************************");
}
    public static void main(String[] args)  // Main Function
    {
     welcome.Me w=new welcome.Me(); //Object Creation
     w.disp();
        Scanner input = new Scanner(System.in);
        System.out.println( "->->->->->->->->->->->Select Your Option->->->->->->->->->->->-");
        books ob = new books();   
        students obStudent = new students();
        int choice;
        int searchChoice;
        do {
            ob.dispMenu();
            choice = input.nextInt();
            switch (choice) {
            case 1:
                book b = new book();
                ob.addBook(b);
                break;
            case 2:
                ob.upgradeBookQty();    
                break;
            case 3:
                System.out.println( " press 1 to Search with Book Serial No.");
                System.out.println(" Press 2 to Search with Book's Author Name.");
                searchChoice = input.nextInt();
                switch (searchChoice) {
                case 1:
                    ob.searchBySno();
                    break;
                case 2:
                    ob.searchByAuthorName();
                }
                break;
            case 4:
                ob.showAllBooks();
                break;
            case 5:
                student s = new student();
                obStudent.addStudent(s);
                break;
            case 6:
                obStudent.showAllStudents();
                break;
            default:
             System.out.println("^^^^^^^^^^^^^^^^^^^^^^^BYE BYE^^^^^^^^^^^^^^^^^^^^^^^^^^^");
            }
        }
        while (choice != 0);
    }
}
 class InvalidserialException extends Exception  //Exception
{
InvalidserialException(String s)
{
System.out.println(s);
}
}



